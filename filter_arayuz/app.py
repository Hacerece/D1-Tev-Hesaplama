import streamlit as st
import pandas as pd
from io import BytesIO

# Excel dosyasÄ±nÄ± yÃ¼kleme fonksiyonu
def load_excel(uploaded_file):
    return pd.read_excel(uploaded_file, sheet_name=None)

# Ä°thalat iÃ§in filtreleme iÅŸlemi
def filter_imports(df):
    columns = [
        'TCGB GÃ¼mrÃ¼k Ä°daresi', 'TCGB Tescil No', 'TCGB Tescil Tarihi', 
        'AlÄ±cÄ± / GÃ¶nderici Unvan', 'Kalem No', 'SatÄ±r Kodu','Atr','E-Atr','Eur1','E-Eur1','Eur1med','E-Eur1med',
        'GTÄ°P Kodu (12 li)', 'GTÄ°P aÃ§Ä±klamasÄ±', 'Madde AdÄ±', 
        'TamamlayÄ±cÄ± Ã–lÃ§Ã¼ Birim', 'Miktar', 'BrÃ¼t Kg', 'Net Kg', 
        'Ä°statistiki Birim Kodu', 'Ä°statistiki Miktar', 'Ä°statistiki KÄ±ymet ($)', 
        'Kalem Rejim Kodu', 'MenÅŸe Ãœlke AdÄ±', 'Sevk Ãœlkesi', 'Ã‡Ä±kÄ±ÅŸ Ãœlkesi', 
        'VarÄ±ÅŸ Ãœlkesi', 'Ticaret YapÄ±lan Ãœlke', 'Kap ÃœrÃ¼n Bilgisi', 
        'Ã–zel Durum', 'Muafiyet Kodu', 'Fatura Bedeli', 'DÃ¶viz TÃ¼rÃ¼', 
        'GÃ¼mrÃ¼k Vergisi Kalem Rto', 'GÃ¼mrÃ¼k Vergisi USD'
    ]
    # GÃ¼mrÃ¼k Vergisi Kalem Rto deÄŸeri sayÄ±sal olanlarÄ± al
    df = df[df['GÃ¼mrÃ¼k Vergisi Kalem Rto'].astype(str).str.replace(',', '').str.replace('.', '').str.isdigit()]
    df = df[df['GÃ¼mrÃ¼k Vergisi Kalem Rto'].astype(float) != 0]  # SayÄ±sala Ã§evirerek 0 olmayanlarÄ± al
    
    filtered = df[df['Ã–zel Durum'] == 0]
    available_columns = [col for col in columns if col in df.columns]
    return filtered[available_columns]

# Ä°hracat iÃ§in filtreleme iÅŸlemi
def filter_exports(df, ab_countries):
    df_ab = df[df['VarÄ±ÅŸ Ãœlkesi'].isin(ab_countries)]
    df_non_ab = df[~df['VarÄ±ÅŸ Ãœlkesi'].isin(ab_countries)]
    return df_ab[['Kalem No', 'SatÄ±r Kodu','Ä°statistiki Miktar', 'GTÄ°P Kodu (12 li)', 'GTÄ°P aÃ§Ä±klamasÄ±', 'Madde AdÄ±', 'TamamlayÄ±cÄ± Ã–lÃ§Ã¼ Birim', 'Miktar', 'BrÃ¼t Kg', 'VarÄ±ÅŸ Ãœlkesi', 'Ã‡Ä±kÄ±ÅŸ Ãœlkesi','Atr','E-Atr','Eur1','E-Eur1','Eur1med','E-Eur1med']], \
           df_non_ab[['Kalem No', 'SatÄ±r Kodu', 'Ä°statistiki Miktar', 'GTÄ°P Kodu (12 li)', 'GTÄ°P aÃ§Ä±klamasÄ±', 'Madde AdÄ±', 'TamamlayÄ±cÄ± Ã–lÃ§Ã¼ Birim', 'Miktar', 'BrÃ¼t Kg', 'VarÄ±ÅŸ Ãœlkesi', 'Ã‡Ä±kÄ±ÅŸ Ãœlkesi','Atr','E-Atr','Eur1','E-Eur1','Eur1med','E-Eur1med']]

# AB Ã¼lkeleri listesi
ab_countries = [
    "ALMANYA", "AVUSTURYA", "BELÃ‡Ä°KA", "BULGARÄ°STAN", "Ã‡EKYA", "DANÄ°MARKA", "ESTONYA", "FÄ°NLANDÄ°YA",
    "FRANSA", "HÄ°RVATÄ°STAN", "HOLLANDA", "Ä°RLANDA", "Ä°SPANYA", "Ä°SVEC", "Ä°TALYA", "LETONYA", "LÄ°TVANYA",
    "LÃœKSEMBURG", "MACARÄ°STAN", "MALTA", "POLONYA", "PORTEKÄ°Z", "ROMANYA", "SLOVAKYA", "SLOVENYA", "YUNANÄ°STAN"
]

# Streamlit ArayÃ¼zÃ¼
st.set_page_config(page_title="Ä°thalat ve Ä°hracat RaporlarÄ±", page_icon="ðŸ“Š", layout="wide")

# BaÅŸlÄ±k
st.title("Ä°thalat ve Ä°hracat Verilerini YÃ¼kleyin")
st.markdown(""" **Ä°thalat ve Ä°hracat verilerinizi yÃ¼kleyin ve istediÄŸiniz raporlarÄ± alÄ±n.** Excel dosyanÄ±zdaki verileri uygun ÅŸekilde filtreleyebilir ve raporlarÄ± oluÅŸturabilirsiniz. """)
# Dosya yÃ¼kleme
uploaded_file = st.file_uploader("Excel DosyasÄ±nÄ± YÃ¼kleyin", type=["xlsx"])

# Dosya yÃ¼klendiyse iÅŸlem yapalÄ±m
if uploaded_file is not None:
    data = load_excel(uploaded_file)

    # Sheet isimlerini kontrol etme
    sheet_names = data.keys()
    st.write(f"YÃ¼klenen dosyada ÅŸu sheet'ler var: {', '.join(sheet_names)}")

    # SeÃ§im butonlarÄ±
    options = ['GerÃ§.Ä°th.List.', 'GerÃ§.Ä°hr.List.', 'Sarfiyat']
    selected_option = st.selectbox("Ä°ÅŸlem Yapmak Ä°stediÄŸiniz Veri Tipini SeÃ§in", options)

    # Sayfa sÄ±rasÄ±na gÃ¶re veri seÃ§me
    if len(sheet_names) >= 3:
        ithalat_df_all = data[list(data.keys())[0]]  # 1. Sayfa (Ä°thalat)
        ihracat_df_all = data[list(data.keys())[1]]  # 2. Sayfa (Ä°hracat)
        sarfiyat_df_all = data[list(data.keys())[2]] if len(data) > 2 else None  # 3. Sayfa (Sarfiyat)

        # Ä°thalat verisini filtreleyelim
        ithalat_df = filter_imports(ithalat_df_all)
        
        # Ä°thalat Pivot HesaplamasÄ±
        ithalat_pivot = ithalat_df.groupby(['SatÄ±r Kodu']).agg({
            'Ä°statistiki Miktar': 'sum'
        }).reset_index()
        ithalat_pivot = ithalat_pivot.rename(columns={'Ä°statistiki Miktar': 'Toplam Ä°statistiki Miktar'})

        # Ä°hracat verileri
        ab_df, non_ab_df = filter_exports(ihracat_df_all, ab_countries)

        # AB Ãœlkeleri iÃ§in pivot hesaplamasÄ±
        ab_pivot = ab_df.groupby('SatÄ±r Kodu')['Ä°statistiki Miktar'].sum().reset_index()
        ab_pivot = ab_pivot.rename(columns={'Ä°statistiki Miktar': 'Toplam Miktar'})

        # 3. DÃ¼nya Ãœlkeleri iÃ§in pivot hesaplamasÄ±
        non_ab_pivot = non_ab_df.groupby('SatÄ±r Kodu')['Ä°statistiki Miktar'].sum().reset_index()
        non_ab_pivot = non_ab_pivot.rename(columns={'Ä°statistiki Miktar': 'Toplam Miktar'})

        # Sarfiyat verileri
        if sarfiyat_df_all is not None:
            sarfiyat_df = sarfiyat_df_all

        # Ekranda veri gÃ¶rselleÅŸtirme
        if selected_option == 'GerÃ§.Ä°th.List.':
            st.subheader("FiltrelenmiÅŸ Ä°thalat Verileri")
            st.dataframe(ithalat_df)

            st.subheader("Ä°thalat Pivot Tablosu")
            st.dataframe(ithalat_pivot)

        elif selected_option == 'GerÃ§.Ä°hr.List.':
            st.subheader("Vergili Ä°hracat (AB Ãœlkeleri)")
            st.dataframe(ab_df)

            st.subheader("AB Ãœlkeleri Pivot Tablosu")
            st.dataframe(ab_pivot)

            st.subheader("3. DÃ¼nya Ãœlkelerine Ä°hracat")
            st.dataframe(non_ab_df)

            st.subheader("3. DÃ¼nya Ãœlkeleri Pivot Tablosu")
            st.dataframe(non_ab_pivot)

        elif selected_option == 'Sarfiyat':
            if sarfiyat_df_all is not None:
                st.subheader("Sarfiyat Verileri")
                st.dataframe(sarfiyat_df_all)
            else:
                st.warning("Sarfiyat verisi bulunmamaktadÄ±r.")

        # Excel dosyasÄ±na yazma ve indirme
        output_combined = BytesIO()
        with pd.ExcelWriter(output_combined, engine="xlsxwriter") as writer:
            # Ä°thalat
            ithalat_df.to_excel(writer, sheet_name="Ä°thalat Verileri", index=False)
            ithalat_pivot.to_excel(writer, sheet_name="Ä°thalat Pivot", index=False)

            # Ä°hracat
            ab_df.to_excel(writer, sheet_name="Vergili Ä°hracat", index=False)
            ab_pivot.to_excel(writer, sheet_name="AB Ãœlkeleri Pivot", index=False)
            non_ab_df.to_excel(writer, sheet_name="3. DÃ¼nya Ãœlkeleri", index=False)
            non_ab_pivot.to_excel(writer, sheet_name="3. DÃ¼nya Ãœlkeleri Pivot", index=False)

            # Sarfiyat
            if sarfiyat_df_all is not None:
                sarfiyat_df.to_excel(writer, sheet_name="Sarfiyat", index=False)

        output_combined.seek(0)
        st.download_button("TÃ¼m Verileri Ä°ndir", data=output_combined, file_name="tÃ¼m_veriler_raporu.xlsx", mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")
